{"version":3,"sources":["components/Table/Table.module.css","components/Table/Table.jsx","Redux/table-selectors.js","api/api.js","Redux/table-reducer.js","assets/loader2.gif","components/Preloader/Preloader.jsx","components/Table/TableContainer.jsx","App.js","reportWebVitals.js","Redux/redux-store.js","index.js"],"names":["module","exports","Table","props","pagesCount","Math","ceil","totalUsersCount","pageSize","pages","i","push","portionsCount","useState","portionNumber","setPortionNumber","leftPortionNumber","rightPortionNumber","sortRows","getNames","name","key","direction","undefined","className","s","table","thead","onClick","requestSort","tbody","users","map","u","id","style","width","status","photos","small","size","color","pagesBtnLeft","filter","p","currentPage","selectedPage","e","onPageChanged","pagesBtnRight","getUsers","createSelector","state","tablePage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","instance","axios","withCredentials","baseURL","headers","usersAPI","get","then","response","data","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","initialState","setCurrentPage","type","setTougleIsFetching","tableReducer","action","count","Preloader","backgroundColor","src","preloader","connect","requestUsers","dispatch","items","totalCount","setSortRows","searchValue","setSearchValue","useEffect","rows","sortUsers","React","useMemo","sortedUsers","sort","a","b","value","search","placeholder","onChange","target","pageNumber","row","toLowerCase","indexOf","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25c594d7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Table_table__3cVv6\",\"tbody\":\"Table_tbody__28b1x\",\"thead\":\"Table_thead__1OMLY\",\"pages\":\"Table_pages__2Hhm_\",\"pagesBtnLeft\":\"Table_pagesBtnLeft__20av0\",\"pagesBtnRight\":\"Table_pagesBtnRight__UjAdj\",\"selectedPage\":\"Table_selectedPage__3R104\",\"search\":\"Table_search__2t7Rk\"};","import React, { useState } from \"react\";\nimport s from \"./Table.module.css\";\n\nimport { NavigateNext } from \"@styled-icons/material-rounded/NavigateNext\";\nimport { ArrowIosBackOutline } from \"@styled-icons/evaicons-outline/ArrowIosBackOutline\";\n\n\nconst Table = props => {\n  //   console.log(props);\n  let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\n  let pages = [];\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n  let portionSize = 10;\n  let portionsCount = Math.ceil(pagesCount / portionSize);\n  let [portionNumber, setPortionNumber] = useState(1);\n  let leftPortionNumber = (portionNumber - 1) * portionSize + 1;\n  let rightPortionNumber = portionNumber * portionSize;\n\n  const { sortRows } = props;\n  const getNames = name => {\n    if (!sortRows) {\n      return;\n    }\n    return sortRows.key === name ? sortRows.direction : undefined;\n  };\n\n  return (\n    <div key={props.users.id}>\n      <table className={s.table}>\n        <thead className={s.thead}>\n          <tr>\n            <th\n              onClick={() => props.requestSort(\"id\")}\n              className={getNames(\"id\")}\n            >\n              ID\n            </th>\n            <th\n              onClick={() => props.requestSort(\"name\")}\n              className={getNames(\"name\")}\n            >\n              Name\n            </th>\n            <th\n              onClick={() => props.requestSort(\"status\")}\n              className={getNames(\"status\")}\n            >\n              Status\n            </th>\n            <th>Photo</th>\n          </tr>\n        </thead>\n        <tbody className={s.tbody}>\n          {props.users.map(u => (\n            <tr key={u.id} className={s.tbody}>\n              <td>{u.id}</td>\n              <td style={{ width: \"250px\" }}>{u.name}</td>\n              <td style={{ width: \"250px\" }}>\n                {u.status ? u.status : \"No status yet\"}\n              </td>\n              <td>{u.photos.small != null ? \"Yep\" : \"Nope\"}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <div className={s.pages}>\n        {portionNumber > 1 && (\n          <ArrowIosBackOutline\n            size=\"25\"\n            color=\"grey\"\n            className={s.pagesBtnLeft}\n            onClick={() => {\n              setPortionNumber(portionNumber - 1);\n            }}\n          />\n        )}\n\n        {pages\n          .filter(p => p >= leftPortionNumber && p <= rightPortionNumber)\n          .map(p => {\n            return (\n              <span\n                className={props.currentPage === p && s.selectedPage}\n                onClick={e => {\n                  props.onPageChanged(p);\n                }}\n              >\n                {p + \" \"}\n              </span>\n            );\n          })}\n        {portionsCount > portionNumber && (\n          <NavigateNext\n            size=\"25\"\n            color=\"grey\"\n            className={s.pagesBtnRight}\n            onClick={() => {\n              setPortionNumber(portionNumber + 1);\n            }}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Table;\n","import { createSelector } from \"reselect\";\n\nconst getUsersSelector = state => {\n  return state.tablePage.users;\n};\n\nexport const getUsers = createSelector(getUsersSelector, users => {\n  return users.filter(u => true);\n});\n\nexport const getPageSize = state => {\n  return state.tablePage.pageSize;\n};\n\nexport const getTotalUsersCount = state => {\n  return state.tablePage.totalUsersCount;\n};\n\nexport const getCurrentPage = state => {\n  return state.tablePage.currentPage;\n};\nexport const getIsFetching = state => {\n  return state.tablePage.isFetching;\n};\n","import * as axios from \"axios\";\n\nconst instance = axios.create({\n  withCredentials: true,\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\n  headers: {\n    \"API-KEY\": \"2e993b56-c8b6-4744-b277-c9b4cada2532\"\n  }\n});\n\nexport const usersAPI = {\n  getUsers(currentPage = 1, pageSize = 50) {\n    return instance\n      .get(`users?page=${currentPage}&count=${pageSize}`)\n      .then(response => {\n        return response.data;\n      });\n  }\n};\n","import { usersAPI } from \"../api/api\";\n\nconst SET_USERS = \"SET_USERS\";\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\n\nlet initialState = {\n  users: [],\n  pageSize: 50,\n  totalUsersCount: 0,\n  isFetching: true\n};\n\nconst tableReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USERS: {\n      return { ...state, users: action.users };\n    }\n    case SET_CURRENT_PAGE: {\n      return { ...state, currentPage: action.currentPage };\n    }\n\n    case SET_TOTAL_USERS_COUNT: {\n      return { ...state, totalUsersCount: action.count };\n    }\n    case TOGGLE_IS_FETCHING: {\n      return { ...state, isFetching: action.isFetching };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const setUsers = users => ({ type: SET_USERS, users });\nexport const setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setTotalUsersCount = totalUsersCount => ({\n  type: SET_TOTAL_USERS_COUNT,\n  count: totalUsersCount\n});\nexport const setTougleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\n\n//thunk\nexport const requestUsers = (currentPage, pageSize) => {\n  return dispatch => {\n    dispatch(setTougleIsFetching(true));\n    dispatch(setCurrentPage(currentPage));\n    usersAPI.getUsers(currentPage, pageSize).then(data => {\n      //   debugger;\n      dispatch(setTougleIsFetching(false));\n      dispatch(setUsers(data.items));\n      dispatch(setTotalUsersCount(Math.ceil(data.totalCount / 4))); //чтобы не загружать всех пользователей\n      // console.log(data);\n    });\n  };\n};\n\nexport default tableReducer;\n","export default __webpack_public_path__ + \"static/media/loader2.62746178.gif\";","import React from \"react\";\nimport preloader from \"../../assets/loader2.gif\";\n\nlet Preloader = props => {\n  return (\n    <div style={{ backgroundColor: \"\" }}>\n      <img src={preloader} />\n    </div>\n  );\n};\n\nexport default Preloader;\n","import React, { useState, useEffect } from \"react\";\nimport Table from \"./Table\";\nimport s from \"./Table.module.css\";\nimport { connect } from \"react-redux\";\nimport {\n  getUsers,\n  getPageSize,\n  getTotalUsersCount,\n  getCurrentPage,\n  getIsFetching\n} from \"../../Redux/table-selectors\";\nimport { requestUsers, setCurrentPage } from \"../../Redux/table-reducer\";\nimport Preloader from \"../Preloader/Preloader\";\n\nconst TableContainer = props => {\n  const [sortRows, setSortRows] = useState([]);\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  useEffect(() => {\n    props.requestUsers(props.currentPage, props.pageSize);\n  }, []);\n\n  const onPageChanged = pageNumber => {\n    props.requestUsers(pageNumber, props.pageSize);\n  };\n\n  const { users } = props;\n  const sortUsers = React.useMemo(() => {\n    let sortedUsers = [...users];\n    if (sortRows !== null) {\n      sortedUsers.sort((a, b) => {\n        if (a[sortRows.key] < b[sortRows.key]) {\n          return sortRows.direction === \"ascending\" ? -1 : 1;\n        }\n        if (a[sortRows.key] > b[sortRows.key]) {\n          return sortRows.direction === \"ascending\" ? 1 : -1;\n        }\n        return 0;\n      });\n    }\n    return sortedUsers;\n  }, [users, sortRows]);\n\n  const requestSort = key => {\n    let direction = \"ascending\";\n    if (\n      sortRows &&\n      sortRows.key === key &&\n      sortRows.direction === \"ascending\"\n    ) {\n      direction = \"descending\";\n    }\n    setSortRows({ key, direction });\n  };\n\n  const search = rows => {\n    return rows.filter(\n      row => row.name.toLowerCase().indexOf(searchValue.toLowerCase()) > -1\n    );\n  };\n\n  return (\n    <div>\n      <input\n        value={searchValue}\n        type=\"text\"\n        className={s.search}\n        placeholder=\"Search.. \"\n        onChange={e => setSearchValue(e.target.value)}\n      />\n      {props.isFetching ? <Preloader /> : null}\n      <Table\n        totalUsersCount={props.totalUsersCount}\n        pageSize={props.pageSize}\n        currentPage={props.currentPage}\n        onPageChanged={onPageChanged}\n        users={search(sortUsers)}\n        requestSort={requestSort}\n        sortRows={sortRows}\n      />\n    </div>\n  );\n};\n\nlet mapStateToProps = state => {\n  return {\n    users: getUsers(state),\n    pageSize: getPageSize(state),\n    totalUsersCount: getTotalUsersCount(state),\n    currentPage: getCurrentPage(state),\n    isFetching: getIsFetching(state)\n  };\n};\n\nexport default connect(mapStateToProps, { requestUsers, setCurrentPage })(\n  TableContainer\n);\n","import \"./App.css\";\nimport TableContainer from \"./components/Table/TableContainer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TableContainer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers, createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport tableReducer from \"./table-reducer\";\n\nconst reducers = combineReducers({\n  tablePage: tableReducer\n});\n\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\n\nwindow.store = store;\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Redux/redux-store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}